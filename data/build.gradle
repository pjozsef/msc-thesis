apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'data',
                'Implementation-Version': version,
                'Main-Class': 'com.github.pjozsef.thesis.data.MainKt'
    }
}

task renameJar(type: Copy) {
    def folder = "$buildDir/libs/"
    def oldName = shadowJar.archiveName
    def newName = "$shadowJar.baseName-$shadowJar.classifier.$shadowJar.extension"

    from "$folder$oldName"
    into folder
    rename oldName, newName
    doLast {
        println("Renamed $shadowJar.archiveName")
    }
}

shadowJar.finalizedBy renameJar

buildscript {
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$rootProject.kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-RC2'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$rootProject.kotlin_version"
    compile 'org.tensorflow:tensorflow:1.5.0'
    compile "org.funktionale:funktionale-all:$rootProject.funktionale_version"
    compile "com.beust:jcommander:$rootProject.jcommander_version"
    compile 'org.apache.commons:commons-exec:1.3'

    testCompile "org.jetbrains.spek:spek-api:$rootProject.spek_version"
    testRuntime "org.jetbrains.spek:spek-junit-platform-engine:$rootProject.spek_version"
    testCompile "org.amshove.kluent:kluent:$rootProject.kluent_version"
}
